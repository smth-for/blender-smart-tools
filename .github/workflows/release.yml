name: release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Blender
        run: |
          wget ${{vars.BLENDER_RELEASE_URL}} -O blender.tar.xz
          tar -xf blender.tar.xz
          mv blender-* blender

      - name: Verify Blender installation
        run: |
          ./blender/blender --version

      - name: Copy README.md
        run: |
          cp README.md src

      - name: Create build folder
        run: |
          mkdir -p build

      - name: Build addon
        run: |
          ./blender/blender -b --command extension build --source-dir=src --output-dir=./build

      - name: Get blender file path
        id: get_blender_file_path
        run: |
          echo "::set-output name=output::$(pwd)/$(ls build/*.zip)"

      - name: Generate release notes
        id: generate_release_notes
        run: |
          echo "::set-output name=output::$(git log -1 --pretty=format:%B)"

      - name: Prepare script
        run: |
          cd .github/scripts
          npm ci

      - name: Run update script
        run: |
          node .github/scripts/update-distribution.js ${{vars.SERVER_DISTRIBUTION_URL}} ${{secrets.SERVER_DISTRIBUTION_API_KEY}} ${{vars.DISTRIBUTION_SLUG}} ${{steps.get_blender_file_path.outputs.output}} $(pwd)/src/blender_manifest.toml

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{steps.generate_release_notes.outputs.output}}
          artifacts: |
            ${{steps.get_blender_file_path.outputs.output}}
          draft: false
          prerelease: false

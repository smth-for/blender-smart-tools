name: release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Blender
        run: |
          wget ${{vars.BLENDER_RELEASE_URL}} -O blender.tar.xz
          tar -xf blender.tar.xz
          mv blender-* blender

      - name: Verify Blender installation
        run: |
          ./blender/blender --version

      - name: Copy README.md
        run: |
          cp README.md src

      - name: Create build folder
        run: |
          mkdir -p build

      - name: Build addon
        run: |
          ./blender/blender -b --command extension build --source-dir=src --output-dir=./build

      - name: Get blender file name from folder
        id: get_blender_file_name
        run: |
          ZIP_FILE_NAME=$(ls build/*.zip)
          echo "ZIP_FILE_PATH=$(pwd)/$ZIP_FILE_NAME" >> $GITHUB_ENV

      - name: Generate release notes
        run: echo "RELEASE_NOTES=$(git log -1 --pretty=format:%B)" >> $GITHUB_ENV

      - name: Prepare script
        run: |
          cd .github/scripts
          npm ci

      - name: Run update script
        run: |
          node .github/scripts/update-distribution.js ${{vars.DISTRIBUTION_URL}} ${{secrets.API_KEY}} ${{vars.DISTRIBUTION_SLUG}} ${{env.ZIP_FILE_PATH}} $(pwd)/src/blender_manifest.toml

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{env.RELEASE_NOTES}}
          artifacts: |
            ${{env.ZIP_FILE_PATH}}
          draft: false
          prerelease: false
